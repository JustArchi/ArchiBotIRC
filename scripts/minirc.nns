; ––––––––––––––––––––––––––––––––––––––––
; NNScript by ESNation v4.22 - MinIRC - coded by greeny & mute
; Don't edit anything in here unless you REALLY know what you're doing!
; ––––––––––––––––––––––––––––––––––––––––
alias minirc {
  if (!$1) { tokenize 32 $active }
  if ($2 != $null) { thmerror -a invalid window. }
  else {
    if ($window(@MinIRC)) { minirc.chg $1 }
    else {
      if (!$readini($mircini,windows,@MinIRC)) { .writeini $mkfullfn($mircini) windows @MinIRC $calc($window(-1).w -400) $+ , $+ 400 $+ , $+ $calc($window(-1).h -170) $+ ,170,0,0,1 }
      window -dok0 $+ $iif(!%minirc.disableeditbox,e) $iif(%minirc.disableborder,+fs,+fnst) @MinIRC $qt($window(Status Window).font) $int($calc($window(Status Window).fontsize *(1- %minirc.fsize)))
      if (!%minirc.trs) { set %minirc.trs 255 }
      setlayer %minirc.trs @MinIRC
      minirc.chg $1
      if (%minirc.minmirc) { showmirc -m }
    }
  }
}
alias minirc.chgopc {
  set %minirc.trs $iif($1,$1,255)
  setlayer $1 $active
}
alias minirc.targetcon { if ($1 isnum 1- $+ $scon(0)) { return $iif($wd(%minirc,2) == $scon($1),$style(1),$iif(!$chan(0) && !$query(0),$style(2))) $replace($scon($1).curconserv,$chr(123),[,$chr(125),],:,;) $+ :minirc.chgcid $scon($1) } }
alias minirc.targetchan { if ($1 isnum 1- $+ $chan(0)) { return $iif($wd(%minirc,1) == $chan($1),$style(1)) $replace($chan($1),$chr(123),[,$chr(125),],:,;) $+ :minirc.chg $chan($1) } }
alias minirc.targetquery { if ($1 isnum 1- $+ $query(0)) { return $iif($wd(%minirc,1) == $query($1),$style(1)) $replace($query($1),$chr(123),[,$chr(125),],:,;) $+ :minirc.chg $query($1) } }
alias minirc.chgcid {
  close -@ @MinIRC
  scid $1
  minirc $iif($chan(1),$v1,$query(1))
  scid -r
}
on *:open:?:*:{
  if ($wd(%minirc,1)) {
    thmecho @MinIRC $thmhl($nick) queried you $+ $iif($wd(%minirc,2) != $cid,$chr(32) $+ on $thmhl($iif($scid($cid).network,$v1,$scid($cid).server))) $+ : $1-
  }
}
on *:text:*:#:{
  if ($wd(%minirc,1)) {
    if ($isachl($1-)) {  
      if ($wd(%minirc,2) != $cid) || ($wd(%minirc,1) != $chan) {
        thmecho @MinIRC $thmhl($nick) highlighted you in $iif($wd(%minirc,2) != $cid,$thmhl($chan) on $thmhl($iif($scid(cid).network,$v1,$scid($cid).server)),$thmhl($chan)) $+ : $1-
      }
    }
  }
}
on *:text:*:?:{
  if ($wd(%minirc,1)) {
    if ($isachl($1-)) {  
      if ($wd(%minirc,2) != $cid) || ($wd(%minirc,1) != $nick) {
        thmecho @MinIRC $thmhl($nick) highlighted you in a query $+ $iif($wd(%minirc,2) != $cid,$chr(32) $+ on $thmhl($iif($scid($cid).network,$v1,$scid($cid).server))) $+ : $1-
      }
    }
  }
}
on *:nick:{
  if ($nick == $wd(%minirc,1)) && ($cid == $wd(%minirc,2)) {
    set %minirc $newnick $cid
    titlebar @MinIRC - $newnick on $curconserv
    thmecho @MinIRC Target changed to $thmhl($newnick) $+ .
  }
}
alias minirc.chg {
  titlebar @MinIRC - $1 on $curconserv
  set %minirc $1 $cid
  if ($window($1)) { 
    thmecho @MinIRC MinIRC window for $thmhl($1) opened on $thmhl($longtime) 
    aline @MinIRC 
    if ($gettok($readini($mircini,options,n2),36,44)) { filter -cwwp $1 @MinIRC } 
    else {
      var %i = $iif($line($1,0) > 5,6,$line($1,0))
      filter -wwpr $calc($line($1,0)-%i) $+ - $+ $line($1,0) $1 @MinIRC
    }
  }
  else {
    if ($left($1,1) isin $chantypes) {
      thmecho @MinIRC $thmhl($1) not joined! Joining...
      aline @MinIRC 
      join -n $1
    }
    else {
      thmecho @MinIRC No query with $thmhl($1) open! Opening...
      aline @MinIRC 
      query -n $1
    }
  }
}
alias minirc.actchan {
  if ($active == @MinIRC) { return $wd(%minirc,1) }
  else { return $active }
}
on *:close:@MinIRC:{ unset %minirc }
alias minirc.restoremirc {
  if ($window(-2).state == minimized) || ($window(-2).state == tray) { showmirc -r }
  else { showmirc -s }
}
menu @MinIRC {
  dclick:minirc.restoremirc
  $style(2) $shorten(12,$wd(%minirc,1)) $+ $chr(58):return
  -
  &Target
  .&Connection
  ..$submenu($minirc.targetcon($1))
  ..-
  .C&hannel
  ..$submenu($minirc.targetchan($1))
  .&Query
  ..$submenu($minirc.targetquery($1))
  -
  $iif(!$osgen,$style(2)) &Opacity
  .$submenu($minirc.opcsub($1))
  &Font size
  .$iif(!%minirc.fsize,$style(1)) &Default:minirc.chgfsize 0
  .-
  .$submenu($minirc.fsize($1))
  $iif(!%minirc.disableborder,$style(1)) &Border:minirc.toggleborder
  $iif(!%minirc.disableeditbox,$style(1)) &Editbox:minirc.toggleeditbox
  $iif(%minirc.minmirc,$style(1)) &Min. mIRC:minirc.toggleminmirc
  $iif($window(@MinIRC).ontop,$style(1)) &On top:window $iif($window(@MinIRC).ontop,-u,-o) @MinIRC
  $iif(!%minirc.disabletimestamp,$style(1)) &Timestamp:minirc.toggletimestamp
  -
  C&lear:clear
  &Close:{
    unset %minirc
    window -c $active
  }
}
alias minirc.chgfsize {
  set %minirc.fsize $1
  font @MinIRC $qt($window(Status Window).font) $int($calc($window(Status Window).fontsize *(1- %minirc.fsize)))
}
alias minirc.fsize { if ($1 isnum 1-10) { return $iif(%minirc.fsize == $calc($1 *0.05),$style(1)) $+(-&,$calc($1 *5),%,:minirc.chgfsize) $calc($1 *0.05) } }
alias minirc.toggleminmirc {
  toggle minirc.minmirc
  thmecho @MinIRC mIRC will $iif(%minirc.minmirc,now,no longer) be minimized on MinIRC start.
}
alias minirc.toggletimestamp {
  toggle minirc.disabletimestamp
  thmecho @MinIRC Timestamping $iif(%minirc.disabletimestamp,disabled!,enabled!)
}
alias minirc.toggleeditbox {
  toggle minirc.disableeditbox
  var %t = $wd(%minirc,1)
  close -@ @MinIRC
  .minirc %t
  thmecho @MinIRC Editbox $iif(%minirc.disableeditbox,disabled!,enabled!)
}
alias minirc.toggleborder {
  toggle minirc.disableborder
  var %t = $wd(%minirc,1)
  close -@ @MinIRC
  .minirc %t
  thmecho @MinIRC Border $iif(%minirc.disableborder,disabled!,enabled!)
}
alias minirc.opcsub {
  if ($1 isnum 1-10) {
    var %t = $calc(25.5* $1)
    return $iif(%minirc.trs == %t,$style(1)) $calc($1 *10) $+ % $+ :minirc.chgopc %t
  }
}
alias window {
  var %new,%rg = $regex(wdw,$1-,/^((?:-[^ ]+ )?(?:-t[^ ]+ )?(?:\+[^ ]+ )?(".+"|[^ ]+))((?: -?\d+){1,4})?(.*)$/),%j = $remove($regml(wdw,2),")
  if (!$window(%j)) { %new = 1 }
  if ($regml(wdw,3)) || ($vwin(%j)) || (-*d* iswmcs $1) { !window $1- }
  else {
    if (%winarr.auto) && (%new) {
      if (%winarr == -s) { !window $regml(wdw,1) $winarr.arr.hybrid.pos $regml(wdw,4) }
      elseif (%winarr == -i) { !window $regml(wdw,1) $winarr.arr.inflate.pos $regml(wdw,4) }
      else { !window $1- }
    }
    else { !window $1- }
  }
  if (!$window(@MinIRC)) { unset %minirc }
}
alias echo {
  tokenize 32 $left($1-,4000)
  !echo $1-
  if ($1 isnum) { tokenize 32 $2- }
  if (-*n* iswmcs $1) { return }
  if (-*c* iswmcs $1) { var %ö = $1-2,%t = $3,%e = $4- }
  elseif (-* iswm $1) { var %ö = $1,%t = $2,%e = $3- }
  else { var %ö,%t = $1,%e = $2- }
  if (%t == $wd(%minirc,1)) && ($cid == $wd(%minirc,2)) {
    if ($window(@MinIRC)) {
      if (%minirc.disabletimestamp) { !echo $iif($remove(%ö,f,b,t) != -,$v1) @MinIRC %e }
      else { !echo $iif($remove(%ö,f,b) != -,$v1) @MinIRC %e }
    }
    else { unset %minirc }
  }
  if (-*a* iswmcs $1) || ((%t == $wd(%minirc,1)) && ($cid == $wd(%minirc,2))) { return }
}
alias nick {
  if (%nickretry. [ $+ [ $cid ] ] == $1) {
    if (!$2) {
      unset %nickretry. $+ $cid
      .timernickchg. $+ $cid off
    }
  }
  !nick $1-
}
alias close {
  !close $1-
  if (!$window(@MinIRC)) { unset %minirc }
  if (-*m* iswmcs $1) {
    var %w = $+(%,qcls.ls.,$cid,.*),%z = $var(%w,0)
    while (%z) {
      var %g = $var(%w,%z)
      if (!$query($gettok(%g,4-,46))) { unset [ %g ] }
      dec %z
    }
  }
}
on *:active:@MinIRC:{ window -g0 $wd(%minirc,1) }
; ––––––––––––––––––––––––––––––––––––––––
; End of file
; ––––––––––––––––––––––––––––––––––––––––
